---

Parameters:
  WindowsAmi:
    Type: AWS::EC2::Image::Id
  InstanceType:
    Type: String

Resources:
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref AWS::StackName
      RetentionInDays: 90

  KeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: !Ref AWS::StackName

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP and RDP
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: 0.0.0.0/0 # TODO: This is bad.

  ElasticIp:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref SteamMachine

  SteamMachine:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          files:
            c:\cfn\cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
            c:\cfn\hooks.d\cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.SteamMachine.Metadata.AWS::CloudFormation::Init
                action=cfn-init.exe -v -s ${AWS::StackId} -r SteamMachine --region ${AWS::Region}
          services:
            windows:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files:
                  - 'c:\cfn\cfn-hup.conf'
                  - 'c:\cfn\hooks.d\cfn-auto-reloader.conf'
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref WindowsAmi
      SecurityGroups:
        - !Ref SecurityGroup
      KeyName: !Ref KeyPair
      Monitoring: true
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              <script>
            - 'cfn-init.exe -v -s '
            - !Ref 'AWS::StackId'
            - ' -r SteamMachine'
            - ' --region '
            - !Ref 'AWS::Region'
            - |+

            - 'cfn-signal.exe -e %ERRORLEVEL% '
            - !Base64 
              Ref: WaitHandle
            - |+

            - </script>

  WaitHandle:
    Type: AWS::CloudFormation::WaitConditionHandle

  WaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    DependsOn: SteamMachine
    Properties:
      Handle: !Ref WaitHandle
      Timeout: 3600
